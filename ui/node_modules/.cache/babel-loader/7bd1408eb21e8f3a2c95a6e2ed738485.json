{"remainingRequest":"/home/svw/vue_go_app/ui/node_modules/thread-loader/dist/cjs.js!/home/svw/vue_go_app/ui/node_modules/babel-loader/lib/index.js!/home/svw/vue_go_app/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/svw/vue_go_app/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/svw/vue_go_app/ui/src/views/Admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/svw/vue_go_app/ui/src/views/Admin.vue","mtime":1595337532624},{"path":"/home/svw/vue_go_app/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/svw/vue_go_app/ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/svw/vue_go_app/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/svw/vue_go_app/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/svw/vue_go_app/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgKiBhcyBGaWxlU2F2ZXIgZnJvbSAnZmlsZS1zYXZlcic7CmltcG9ydCAqIGFzIFppcCBmcm9tICdqc3ppcCc7CmltcG9ydCAqIGFzIFppcFV0aWwgZnJvbSAnanN6aXAtdXRpbHMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FkbWluJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWN0aXZlRm9sZGVyOiAnJywKICAgICAgbWFza19EYXRhOiBudWxsLAogICAgICBpbWFnZV9EYXRhOiBudWxsLAogICAgICBmaWVsZHM6IFsnZm9sZGVyX25hbWUnLCAnaW1hZ2VzJywgJ21hc2tzJ10sCiAgICAgIGZpZWxkczI6IFsnaW1hZ2UnLCAnbWFzayddLAogICAgICBmb2xkZXJzOiBbXSwKICAgICAgZmlsZXM6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uIHByZXZlbnREZWZhdWx0KGUpIHsKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgfSwKICAgIG9uRmlsZVNlbGVjdGVkOiBmdW5jdGlvbiBvbkZpbGVTZWxlY3RlZChlKSB7CiAgICAgIHZhciBmaWxlcyA9IGUudGFyZ2V0LmZpbGVzOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmaWxlcy5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnaW1hZ2VzJywgZS50YXJnZXQuZmlsZXNbaV0pOwogICAgICAgIGF4aW9zLnBvc3QoJy91cGxvYWQvaW1hZ2VzJywgZm9ybURhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgfSk7IC8vbW9uZ29EQiBzdHVmZgogICAgICAgIC8vIGF4aW9zLnBvc3QoJy9pbWFnZScsIHsKICAgICAgICAvLyAgIGltZ05hbWU6IGZOYW1lLAogICAgICAgIC8vICAgaW1nVHlwZTogZlR5cGUsCiAgICAgICAgLy8gICBpbWdTaXplOiBmU2l6ZQogICAgICAgIC8vIH0pCiAgICAgICAgLy8gLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgLy8gICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgLy8gfSwgKGVycm9yKSA9PiB7CiAgICAgICAgLy8gICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgLy8gfSk7CiAgICAgIH0KICAgIH0sCiAgICBnZXRGaWxlczogZnVuY3Rpb24gZ2V0RmlsZXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgcHJvbWlzZXMgPSBbXTsKICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICBwcm9taXNlcy5wdXNoKG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICBheGlvcy5nZXQoJy9pbWFnZUxvY2F0aW9uL2ltYWdlcycpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgICAgIHNlbGYuaW1hZ2VfRGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgIH0pOwogICAgICB9KSk7CiAgICAgIHByb21pc2VzLnB1c2gobmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIGF4aW9zLmdldCgnL2ltYWdlTG9jYXRpb24vbWFza3MnKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICBzZWxmLm1hc2tfRGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgIH0pOwogICAgICB9KSk7CiAgICAgIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5nZXRGb2xkZXJzKCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0Rm9sZGVyczogZnVuY3Rpb24gZ2V0Rm9sZGVycygpIHsKICAgICAgdGhpcy5mb2xkZXJzID0gW107CgogICAgICBmb3IgKHZhciBmb2xkZXIgaW4gdGhpcy5pbWFnZV9EYXRhKSB7CiAgICAgICAgdGhpcy5mb2xkZXJzLnB1c2goewogICAgICAgICAgJ2ZvbGRlcl9uYW1lJzogZm9sZGVyLAogICAgICAgICAgJ2ltYWdlcyc6IHRoaXMuaW1hZ2VfRGF0YVtmb2xkZXJdLmxlbmd0aCwKICAgICAgICAgICdtYXNrcyc6IHRoaXMubWFza19EYXRhW2ZvbGRlcl0gPyB0aGlzLm1hc2tfRGF0YVtmb2xkZXJdLmxlbmd0aCA6IDAKICAgICAgICB9KTsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmZvbGRlcnMpOwogICAgICB9CiAgICB9LAogICAgc2hvd0ZpbGVzOiBmdW5jdGlvbiBzaG93RmlsZXMoaXRlbXMpIHsKICAgICAgdGhpcy5maWxlcyA9IFtdOwogICAgICB0aGlzLmFjdGl2ZUZvbGRlciA9IGl0ZW1zWzBdLmZvbGRlcl9uYW1lOwogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHRoaXMuaW1hZ2VfRGF0YVtpdGVtc1swXS5mb2xkZXJfbmFtZV0uZm9yRWFjaChmdW5jdGlvbiAoZmlsZW5hbWUpIHsKICAgICAgICBzZWxmLmZpbGVzLnB1c2goewogICAgICAgICAgJ2ltYWdlJzogZmlsZW5hbWUsCiAgICAgICAgICAnbWFzayc6IGZpbGVuYW1lCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGdlbmVyYXRlWmlwOiBmdW5jdGlvbiBnZW5lcmF0ZVppcCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBjb25zb2xlLmxvZyhaaXBVdGlsLmdldEJpbmFyeUNvbnRlbnQpOwogICAgICB2YXIgemlwID0gbmV3IFppcCgpOwogICAgICB2YXIgZG93bmxvYWRlZEZpbGVzID0gW107CgogICAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcChmb2xkZXIpIHsKICAgICAgICB2YXIgZm9sZGVyWmlwID0gemlwLmZvbGRlcihmb2xkZXIpOwoKICAgICAgICBfdGhpczIubWFza19EYXRhW2ZvbGRlcl0uZm9yRWFjaChmdW5jdGlvbiAoZmlsZW5hbWUpIHsKICAgICAgICAgIHZhciB1cmwgPSAiL21hc2tzLyIuY29uY2F0KGZvbGRlciwgIi8iKS5jb25jYXQoZmlsZW5hbWUpOwogICAgICAgICAgZG93bmxvYWRlZEZpbGVzLnB1c2gobmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgICAgICBaaXBVdGlsLmdldEJpbmFyeUNvbnRlbnQodXJsLCBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7CiAgICAgICAgICAgICAgaWYgKGVycikgewogICAgICAgICAgICAgICAgcmVqZWN0KGVycik7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBmb2xkZXJaaXAuZmlsZShmaWxlbmFtZSwgZGF0YSwgewogICAgICAgICAgICAgICAgYmluYXJ5OiB0cnVlCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pKTsKICAgICAgICB9KTsKICAgICAgfTsKCiAgICAgIGZvciAodmFyIGZvbGRlciBpbiB0aGlzLm1hc2tfRGF0YSkgewogICAgICAgIF9sb29wKGZvbGRlcik7CiAgICAgIH0KCiAgICAgIGNvbnNvbGUubG9nKGRvd25sb2FkZWRGaWxlcyk7CiAgICAgIFByb21pc2UuYWxsKGRvd25sb2FkZWRGaWxlcykudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgemlwLmdlbmVyYXRlQXN5bmMoewogICAgICAgICAgdHlwZTogJ2Jsb2InCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoYmxvYikgewogICAgICAgICAgRmlsZVNhdmVyLnNhdmVBcyhibG9iLCBuZXcgRGF0ZShEYXRlLm5vdygpKS50b0xvY2FsZURhdGVTdHJpbmcoKS5zcGxpdCgnLycpLmpvaW4oJy0nKSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0RmlsZXMoKTsKICAgIHRoaXMuZ2V0Rm9sZGVycygpOwogIH0KfTs="},{"version":3,"sources":["Admin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<b-container fluid>\n  <div class=\"Tool\" @mousedown=\"preventDefault\">\n    <b-navbar type=\"dark\" variant=\"dark\">\n      <b-navbar-brand href=\"http://localhost:8082/#/\"></b-navbar-brand>\n      <b-navbar-nav>\n          <input\n            style=\"display: none\"\n            name=\"myFiles\"\n            type=\"file\"\n            @change=\"onFileSelected\"\n            webkitdirectory\n            ref=\"fileInput\"/>\n          <b-button class=\"nav-bar-button\" @click=\"$refs.fileInput.click()\">\n            Upload Files\n            <b-icon icon=\"folder-plus\" aria-hidden=\"true\"></b-icon>\n          </b-button>\n          <b-button class=\"nav-bar-button\" style=\"position: right\" @click=\"getFiles\">\n            Get Masks\n          </b-button>\n          <b-button class=\"nav-bar-button\" style=\"position: right\" @click=\"generateZip\">\n            <b-icon icon=\"download\" aria-hidden=\"true\"></b-icon>\n            <b-badge :variant=\"downloadColor\" v-if=\"numSaved > 0\">{{ numSaved + \" / \" + img_dir.length }}</b-badge>\n          </b-button>\n      </b-navbar-nav>\n    </b-navbar>\n    <b-card class=\"card-main\">\n      <b-row>\n        <b-col cols=\"6\">\n          <b-card\n            border-variant=\"default\"\n            header-bg-variant=\"default\"\n            header-text-variant=\"default\"\n            align=\"left\"\n          >\n            <div slot=\"header\">\n              <b-row>\n                <b-col cols=\"4\">\n                  <h2>Folders</h2>\n                </b-col>\n              </b-row>\n            </div>\n            <b-collapse id=\"cardSystems\" visible>\n              <b-card-text>\n                <b-table \n                  striped \n                  hover \n                  selectable\n                  select-mode=\"single\"\n                  @row-selected=\"showFiles\"\n                  sticky-header=\"500px\"\n                  :items=\"folders\"\n                  :fields=\"fields\"\n                >\n                </b-table>\n              </b-card-text>\n            </b-collapse>\n          </b-card>\n        </b-col>\n        <b-col cols=\"6\">\n          <b-card\n            border-variant=\"default\"\n            header-bg-variant=\"default\"\n            header-text-variant=\"default\"\n            align=\"left\"\n          >\n            <div slot=\"header\">\n              <b-row>\n                <b-col cols=\"4\">\n                  <h2>Files</h2>\n                </b-col>\n              </b-row>\n            </div>\n            <b-collapse id=\"fileSystems\" visible>\n              <b-card-text>\n                <b-table \n                  striped \n                  hover \n                  selectable\n                  select-mode=\"single\"\n                  sticky-header=\"500px\"\n                  :items=\"files\"\n                  :fields=\"fields2\"\n                >\n                  <template v-slot:cell(image)=\"data\">\n                    <img :src=\"`/images/${activeFolder}/${data.item.image}`\" style=\"height: 141px\">\n                  </template>\n                  <template v-slot:cell(mask)=\"data\">\n                    <img \n                      v-if=\"mask_Data[activeFolder] && mask_Data[activeFolder].includes(data.item.image)\"\n                      :src=\"`/masks/${activeFolder}/${data.item.image}`\" \n                      style=\"height: 141px\"\n                    >\n                  </template>\n                </b-table>\n              </b-card-text>\n            </b-collapse>\n          </b-card>\n        </b-col>\n      </b-row>\n    </b-card>\n  </div>\n</b-container>\n</template>\n\n<script>\nimport axios from 'axios'\nimport * as FileSaver from 'file-saver'\nimport * as Zip from 'jszip'\nimport * as ZipUtil from 'jszip-utils'\n\nexport default {\n  name: 'Admin',\n  data () {\n    return {\n      activeFolder: '',\n      mask_Data: null,\n      image_Data: null,\n      fields: [\n        'folder_name',\n        'images',\n        'masks'\n      ],\n      fields2: [\n        'image',\n        'mask'\n      ],\n      folders: [],\n      files: []\n    }\n  },\n  methods: {\n    preventDefault (e) {\n      e.preventDefault()\n    },\n\n    onFileSelected (e) {\n      var files = e.target.files\n      for (let i = 0; i < files.length; i++) {\n        let formData = new FormData()\n        formData.append('images', e.target.files[i])\n        axios.post('/upload/images', formData)\n        .then((response) => {\n          console.log(response);\n        }, (error) => {\n          console.log(error);\n        });\n          //mongoDB stuff\n        // axios.post('/image', {\n          //   imgName: fName,\n        //   imgType: fType,\n        //   imgSize: fSize\n        // })\n        // .then((response) => {\n          //   console.log(response);\n        // }, (error) => {\n          //   console.log(error);\n        // });\n      }\n    },\n\n    getFiles () {\n      let promises = []\n      let self = this\n      promises.push(\n        new Promise(function(resolve, reject) {\n          axios.get('/imageLocation/images')\n            .then((response) => {\n              console.log(response.data);\n              self.image_Data = response.data\n              resolve()\n            })\n            .catch((error) => {\n              reject(error)\n            })\n        })\n      )\n      promises.push(\n        new Promise(function(resolve, reject) {\n          axios.get('/imageLocation/masks')\n            .then((response) => {\n              console.log(response.data);\n              self.mask_Data = response.data\n              resolve()\n            })\n            .catch((error) => {\n              reject(error)\n            })\n        })\n      )\n      Promise.all(promises).then(() => {\n        this.getFolders()\n      }).catch((error) => {\n        console.log(error)\n      })\n    },\n\n    getFolders () {\n      this.folders = []\n      for (let folder in this.image_Data) {\n        this.folders.push({\n            'folder_name': folder,\n            'images': this.image_Data[folder].length,\n            'masks': this.mask_Data[folder] ? this.mask_Data[folder].length : 0\n          })\n        console.log(this.folders)\n      }\n    },\n\n    showFiles (items) {\n      this.files = []\n      this.activeFolder = items[0].folder_name\n      let self = this\n      this.image_Data[items[0].folder_name].forEach(function(filename){\n        self.files.push({\n          'image': filename,\n          'mask': filename\n        })\n      })\n    },\n\n    generateZip () {\n      console.log(ZipUtil.getBinaryContent)\n      var zip = new Zip()\n      let downloadedFiles = []\n      for (let folder in this.mask_Data) {\n        let folderZip = zip.folder(folder)\n        this.mask_Data[folder].forEach(function (filename) {\n          var url = `/masks/${folder}/${filename}`\n          downloadedFiles.push(\n            new Promise(function(resolve, reject) {\n              ZipUtil.getBinaryContent(url, function (err, data) {\n                if (err) {\n                  reject(err)\n                }\n                folderZip.file(filename, data, {binary: true})\n                resolve()\n              })\n            })\n          )\n        })\n      }\n      console.log(downloadedFiles)\n      Promise.all(downloadedFiles).then(() => {\n        zip.generateAsync({type: 'blob'}).then(function (blob) {\n          FileSaver.saveAs(\n            blob, \n            new Date(Date.now()).toLocaleDateString().split('/').join('-')\n          )\n        })\n      })\n    }\n  },\n  mounted () {\n    this.getFiles()\n    this.getFolders()\n  }\n\n\n}\n</script>\n\n<style scoped>\nh1, h2 {\n  font-weight: normal;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #539ecf;\n}\ncanvas {\n  background-color: #343a40;\n  border: 10px !important;\n  border-color: #343a40;\n  margin: 2px;\n}\n.file-viewer {\n  box-shadow: none !important;\n  border: none !important;\n  font-size: small !important;\n}\n.navbar-brand {\n  width: 16.6666%;\n  height: 60px;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 100%;\n  padding: 25px 0;\n  float: left;\n  transition: all 0.3s ease;\n  background-image: url(../assets/name.svg);\n  color: rgba(255, 255, 255, 0.8);\n}\n.nav-bar-button {\n  background-color: transparent !important;\n  border-color: transparent !important;\n}\n.nav-bar-button:hover {\n  background-color: #5a6268 !important;\n  border-color: #5a6268 !important;\n}\n.card-main {\n  margin-top: 20px;\n  background-color: #343a40;\n  border: none;\n}\n</style>"],"sourceRoot":"src/views"}]}