{"remainingRequest":"/home/svw/vue_go_app/frontend/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/svw/vue_go_app/frontend/app/src/components/Tool.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/svw/vue_go_app/frontend/app/src/components/Tool.vue","mtime":1594844274058},{"path":"/home/svw/vue_go_app/frontend/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/svw/vue_go_app/frontend/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/svw/vue_go_app/frontend/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/svw/vue_go_app/frontend/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Tool.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Tool.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"Tool\" @mousedown=\"preventDefault\">\n    <b-navbar type=\"dark\" variant=\"dark\">\n      <b-navbar-brand href=\"https://www.smartvisionworks.com/\"></b-navbar-brand>\n      <b-navbar-nav>\n        <b-button class=\"nav-bar-button\" v-b-toggle.sidebar-2>Instruction</b-button>\n          <b-button \n            class=\"nav-bar-button\"          \n            v-b-toggle.sidebar-1 \n          >\n            View Files\n          </b-button>\n      </b-navbar-nav>\n    </b-navbar>\n    <b-container class=\"SVW web app\">\n      <b-row class=\"justify-content-md-center\">\n        <b-col cols=\"12\" md=\"auto\">\n          <b-sidebar class=\"sidebar\" id=\"sidebar-1\" shadow>\n            <template v-slot:title>\n              <div style=\"width: 100%\" >\n                Files\n                <b-button @click=\"getFiles\">\n                  <svg \n                  width=\"1em\" \n                  height=\"1em\" \n                  viewBox=\"0 0 16 16\" \n                  class=\"bi bi-arrow-clockwise\" \n                  fill=\"currentColor\" \n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path fill-rule=\"evenodd\" d=\"M3.17 6.706a5 5 0 0 1 7.103-3.16.5.5 0 1 0 .454-.892A6 6 0 1 0 13.455 5.5a.5.5 0 0 0-.91.417 5 5 0 1 1-9.375.789z\"/>\n                    <path fill-rule=\"evenodd\" d=\"M8.147.146a.5.5 0 0 1 .707 0l2.5 2.5a.5.5 0 0 1 0 .708l-2.5 2.5a.5.5 0 1 1-.707-.708L10.293 3 8.147.854a.5.5 0 0 1 0-.708z\"/>\n                  </svg>\n                </b-button>\n              </div>\n            </template>\n            <div class=\"px-3 py-2\">\n              <li v-for=\"(folderContents, fkey) in image_Data\" :key=\"fkey\">\n                <b-button @click=\"activeFolder = fkey\">{{ fkey }}</b-button>\n                <div v-if=\"activeFolder == fkey\">\n                  <hr />\n                  <b-button \n                    v-for=\"(file, idx) in folderContents\" \n                    @click=\"toggle(idx)\" \n                    :variant=\"actionVariant\"                    \n                    class=\"file-viewer\" \n                    :class=\"{'active': idx == activeIndex}\"\n                    :key=\"idx\"\n                  >\n                    {{ file }}\n                  </b-button>\n                </div>\n              </li>\n            </div>\n          </b-sidebar>\n          <b-sidebar class=\"sidebar\" id=\"sidebar-2\" title=\"Instructions\" shadow>\n            <div class=\"px-3 py-2\">\n              <ol>\n                <li><b>1.</b> Upload Files by clicking \"Upload Files\" button.</li>\n                <li><b>2.</b> Click and drag on the image to make a rectangle around desired object.</li>\n                <li><b>3.</b> Click \"Select\" or press the spacebar to segment the desired area.</li>\n                <li><b>4.</b> If the outcome is acceptable click \"Save\".</li>\n                <li><b>5.</b> If adjustments need to be made use the \"Foreground\" and \"Background\" buttons or press 'F' and 'B' and draw on the image using the respective tools for foreground and background areas.</li>\n                <li><b>6.</b> Click \"Select\" again to re-segment on the new selections.</li>\n                <li><b>7.</b> Continue this process on the image until desired segmentation has been achieved.</li>\n                <li><b>8.</b> Click \"Save\" and repeat this process for each image.</li>\n                <li><b>9.</b> When all images have been completed and saved click the download button on the top toolbar to retreave your masks.</li>\n                <li><b>10.</b> Good Job!</li>\n              </ol>\n            </div>\n          </b-sidebar>\n          <div :style=\"{cursor: cursorType}\" style=\"padding: 20px;\">\n            <canvas id=\"canvasOutput\" ref=\"canvasOutput\" style=\"width: 512px; height: 512px;\"></canvas>\n            <canvas id=\"canvasInput\" style=\"width: 512px; height: 512px;\"></canvas>\n            <canvas id=\"canvasMask\" style=\"width: 512px; height: 512px; display: none;\"></canvas>\n          </div>\n          <b-row class=\"justify-content-md-center\">\n            <b-button-toolbar v-if=\"this.toolActive\" key-nav aria-label=\"Toolbar with button groups\">\n              <div>\n                <b-button-group class=\"mx-1\">\n                  <b-button b-button v-b-tooltip.hover.bottom=\"'(left-arrow)'\" @click=\"prev\">\n                    <b-icon icon=\"arrow-left\" aria-hidden=\"true\"></b-icon>\n                  </b-button>\n                  <b-button b-button v-b-tooltip.hover.bottom=\"'(right-arrow)'\"  @click=\"next\">\n                    <b-icon icon=\"arrow-right\" aria-hidden=\"true\"></b-icon>\n                  </b-button>\n                </b-button-group>\n              </div>\n              <div>\n                <b-button-group  class=\"mx-1\">\n                  <b-button v-b-tooltip.hover.bottom=\"'(spacebar)'\" @click=\"select\">Select</b-button>\n                  <b-button v-b-tooltip.hover.bottom=\"'(F)'\" @click=\"fgDraw\">Foreground</b-button>\n                  <b-button v-b-tooltip.hover.bottom=\"'(B)'\" @click=\"bgDraw\">Background</b-button>\n                  <b-button v-b-tooltip.hover.bottom=\"'(C)'\" @click=\"continueDraw\">Continue</b-button>\n                  <b-button v-b-tooltip.hover.bottom=\"'(U)'\" @click=\"undo\">\n                    <b-icon icon=\"arrow-counterclockwise\" aria-hidden=\"true\"></b-icon>\n                    Undo\n                  </b-button>\n                  <b-button v-b-tooltip.hover.bottom=\"'(R)'\" @click=\"resetImg\">Reset</b-button>\n                </b-button-group>\n              </div>\n              <div>\n                <b-button-group  class=\"mx-1\">\n                  <b-button v-b-tooltip.hover.bottom=\"'(S)'\" v-if=\"selected\" @click=\"saveMask\">Save</b-button>\n                </b-button-group>\n              </div>\n            </b-button-toolbar>\n          </b-row>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport paper from 'paper'\nimport * as cv from 'opencv.js'\nimport axios from 'axios'\n\nexport default {\n  name: 'Tool',\n  data () {\n    return {\n      activeFolder: '',\n      index: '',\n      img: new Image(),\n      width: 512,\n      height: 512,\n      mat: '',\n      imageView: '',\n      image: '',\n      tempMask2: '',\n      finalMaskResult: '',\n      greenMask: '',\n      redMask: '',\n      addWeightedMat: '',\n      img_dir: [],\n      img_dir_pos: 0,\n      rect: '',\n      p1: '',\n      p3: '',\n      color: '',\n      drawType: '',\n      alpha: -0.5,\n      beta: 1,\n      gamma: 1,\n      count: 0,\n      drawing: false,\n      drawLine: false,\n      selected: false,\n      continue: false,\n      toolActive: false,\n      rectDrawn: false,\n      foregroundPoints: [],\n      backgroundPoints: [],\n      undoPointsFg: [],\n      undoPointsBg: [],\n      undoPoints: [],\n      undoMats: [],\n      fileNames: [],\n      image_Data: null,\n      mask_Data: null,\n      activeIndex: -1,\n      cursorType: 'crosshair',\n      actionVariant: 'outline-secondary',\n      downloadColor: 'warning',\n    }\n  },\n  computed: {\n    activeFile() {\n      if (this.activeFolder == '' || this.activeIndex == -1)\n        return ''\n      else\n        return this.image_Data[this.activeFolder][this.activeIndex]\n    }\n  },\n  methods: {\n    preventDefault (e) {\n      e.preventDefault()\n    },\n    toggle (index) {\n      this.activeIndex = index\n      this.activeFile = this.image_Data[this.activeFolder][index]\n      console.log(this.image_Data[this.activeFolder][index])\n      this.img.src = `/images/${this.activeFolder}/${this.image_Data[this.activeFolder][index]}`\n      this.resetImg()\n    },\n\n    getFiles () {\n      axios.get('/imageLocation/images')\n      .then((response) => {\n        console.log(response.data);\n        this.image_Data = response.data\n      })\n      axios.get('/imageLocation/masks')\n      .then((response) => {\n        console.log(response.data);\n        this.mask_Data = response.data\n        console.log(this.mask_Data)\n      })\n      this.toolActive = true\n    },\n\n    saveMask () {\n      this.addMask(this.finalMaskResult)\n      this.actionVariant = 'outline-success'\n      var canvas = document.getElementById('canvasMask')\n      var self = this\n      canvas.toBlob(function (blob) {\n        const formData = new FormData()\n        formData.append('masks', blob, `${self.activeFolder}/${self.activeFile}`)\n        axios.post('/upload/masks', formData)\n        .then((response) => {\n          console.log(response);\n        }, (error) => {\n          console.log(error);\n        });\n        self.next()\n        self.getFiles()\n      })\n    },\n\n    // Canvas/Image navigation and output\n    showImg () {\n      this.mat = cv.imread(this.img)\n      cv.resize(this.mat, this.imageView, new cv.Size(512, 512), 0, 0, cv.INTER_NEAREST)\n      cv.imshow('canvasOutput', this.imageView)\n      if (this.mask_Data[this.activeFolder] && this.mask_Data[this.activeFolder].includes(this.activeFile)) {\n        var mask = new Image()\n        mask.src = `/masks/${this.activeFolder}/${this.activeFile}`\n        mask.onload = () => {\n          var mat = cv.imread(mask)\n          cv.imshow('canvasInput', mat)\n        }\n      }\n    },\n    prev () {\n      if (this.activeIndex > 0) {\n        this.activeIndex -= 1\n      }\n      else {\n        this.activeIndex = this.image_Data[this.activeFolder].length - 1\n      }\n      this.img.src = `/images/${this.activeFolder}/${this.image_Data[this.activeFolder][this.activeIndex]}`\n      this.resetImg()\n    },\n    next () {\n      if (this.activeIndex === this.image_Data[this.activeFolder].length - 1) {\n        this.activeIndex = 0\n      }\n      else {\n        this.activeIndex += 1\n      }\n      this.resetImg()\n    },\n\n    resetImg () {\n      var blank = new cv.Mat(512, 512, cv.CV_8UC1, new cv.Scalar(52, 64, 58, 255))\n      this.cursorType = 'crosshair'\n      this.actionVariant = 'outline-secondary'\n      this.selected = false\n      this.drawLine = false\n      this.drawing = false\n      this.continue = false\n      this.rectDrawn = false\n      this.backgroundPoints = []\n      this.foregroundPoints = []\n      this.undoPointsFg = []\n      this.undoPointsBg = []\n      this.undoPoints = []\n      this.undoMats = []\n      delete this.rect\n      this.count = 0\n      this.finalMaskResult.delete()\n      this.finalMaskResult = new cv.Mat(512, 512, cv.CV_8UC1, new cv.Scalar(0, 0, 0, 255))\n      this.addWeightedMat.delete()\n      this.addWeightedMat = new cv.Mat()\n      this.grabCutMask.delete()\n      this.grabCutMask = new cv.Mat(512, 512, cv.CV_8UC1, new cv.Scalar(0, 0, 0, 255))\n      this.img.src = `/images/${this.activeFolder}/${this.image_Data[this.activeFolder][this.activeIndex]}`\n      this.img.onload = () => {\n        this.showImg()\n        cv.imshow('canvasInput', blank)\n      }\n    },\n\n    // Mouse Events\n    mouseDown (e) {\n      this.p3 = e.point\n      if (!this.drawLine) {\n        this.rectangle(e)\n        this.rectDrawn = true\n      }\n      else {\n        this.draw(e)\n      }\n    },\n    mouseDrag (e) {\n      if (!this.drawLine) {\n        this.rectangle(e)\n        this.rectDrawn = true\n      }\n      else {\n        this.draw(e)\n      }\n    },\n    mouseUp () {\n      if (this.foregroundPoints.length > 0 || this.backgroundPoints.length > 0) {\n        var lastMat = this.image.clone()\n        this.undoMats.push(lastMat)\n      }\n      if (this.undoPointsFg.length > 0) {\n        this.undoPoints.push(this.undoPointsFg)\n        this.undoPointsFg = []\n      }\n      if (this.undoPointsBg.length > 0) {\n        this.undoPoints.push(this.undoPointsBg)\n        this.undoPointsBg = []\n      }\n    },\n\n    // Drawing and stuff\n    draw (e) {\n      this.p1 = e.point\n      this.drawing = true\n      cv.circle(this.image, this.p1, 2, this.color, -1)\n      if (this.foregroundPoints.length === 0 && this.backgroundPoints.length === 0) {\n        var tmpImg = this.image.clone()\n        console.log('original image coppied')\n        this.undoMats.push(tmpImg)\n      }\n      if (this.drawType === 'Fore point') {\n        this.foregroundPoints.push(this.p1)\n        this.undoPointsFg.push(this.p1)\n      }\n      else if (this.drawType === 'Back point') {\n        this.backgroundPoints.push(this.p1)\n        this.undoPointsBg.push(this.p1)\n      }\n      cv.imshow('canvasOutput', this.image)\n    },\n    fgDraw () {\n      if (this.selected) {\n        this.drawLine = true\n        this.drawType = 'Fore point'\n        this.cursorType = 'pointer'\n        this.color = new cv.Scalar(255, 0, 0, 255)\n      }\n    },\n    bgDraw () {\n      if (this.selected) {\n        this.drawLine = true\n        this.drawType = 'Back point'\n        this.cursorType = 'pointer'\n        this.color = new cv.Scalar(0, 255, 0, 255)\n      }\n    },\n    rectangle (e) {\n      this.color = new cv.Scalar(0, 0, 255, 255)\n      var p2 = e.point\n      delete this.rect\n      this.image.delete()\n      if (p2.x > this.width) {\n        p2.x = this.width - 2\n      }\n      if (p2.y > this.height) {\n        p2.y = this.height - 2\n      }\n      p2.x = p2.x < 0 ? 1 : p2.x\n      p2.y = p2.y < 0 ? 1 : p2.y\n      var rectWidth = Math.abs(p2.x - this.p3.x)\n      var rectHeight = Math.abs(p2.y - this.p3.y)\n      this.image = this.imageView.clone()\n      this.rect = new cv.Rect(Math.min(p2.x, this.p3.x), Math.min(p2.y, this.p3.y), rectWidth, rectHeight)\n      cv.rectangle(this.image, p2, this.p3, this.color, 2)\n      cv.imshow('canvasOutput', this.image)\n    },\n    continueDraw () {\n      this.addMask(this.finalMaskResult)\n      this.count += 1\n      this.continue = true\n      this.grabCutMask.delete()\n      this.grabCutMask = new cv.Mat(512, 512, cv.CV_8UC1, new cv.Scalar(0, 0, 0, 255))\n      console.log('deleted grabcutMask')\n      cv.imshow('canvasMask', this.finalMaskResult)\n      this.selected = false\n      this.drawLine = false\n      this.drawing = false\n      this.foregroundPoints = []\n      this.backgroundPoints = []\n      this.imageView = this.addWeightedMat.clone()\n      cv.imshow('canvasOutput', this.imageView)\n      this.drawType = 'rect'\n      this.cursorType = 'crosshair'\n      this.color = new cv.Scalar(0, 0, 255, 255)\n    },\n    undo () {\n      if (this.undoPoints.length > 0) {\n        console.log('Foreground', this.foregroundPoints.length)\n        console.log('Background', this.backgroundPoints.length)\n        this.undoMats.splice(this.undoMats.length - 1, 1)\n        cv.imshow('canvasOutput', this.undoMats[this.undoMats.length - 1])\n        this.image = this.undoMats[this.undoMats.length - 1].clone()\n        var points = this.undoPoints\n        this.foregroundPoints = this.foregroundPoints.filter(function (el) {\n          return !points[points.length - 1].includes(el)\n        })\n        this.backgroundPoints = this.backgroundPoints.filter(function (el) {\n          return !points[points.length - 1].includes(el)\n        })\n        console.log('Foreground', this.foregroundPoints.length)\n        console.log('Background', this.backgroundPoints.length)\n        this.undoPoints.splice(this.undoPoints.length - 1, 1)\n      }\n    },\n\n    // Grab-Cut and accessories\n    select () {\n      if (this.rectDrawn) {\n        this.selected = true\n        this.grab_Cut()\n      }\n    },\n    grab_Cut () {\n      var maskView = this.imageView.clone()\n      var tempMat1 = new cv.Mat()\n      var tempMat3 = new cv.Mat()\n      var tempMat4 = new cv.Mat()\n      var greenOverlay = new cv.Mat()\n      var bgdModel = new cv.Mat()\n      var fgdModel = new cv.Mat()\n      var resizeRect = new cv.Rect(this.rect.x * 0.5, this.rect.y * 0.5, this.rect.width * 0.5, this.rect.height * 0.5)\n      cv.cvtColor(maskView, maskView, 1, 0)\n      var mode\n      if (this.drawing) {\n        console.log('foreground points', this.foregroundPoints.length)\n        console.log('background points', this.backgroundPoints.length)\n        mode = cv.GC_INIT_WITH_MASK\n        for (var i = 0; i < this.foregroundPoints.length; i++) {\n          this.tempMask2.ucharPtr(this.foregroundPoints[i].y * 0.5, this.foregroundPoints[i].x * 0.5)[0] = 1\n        }\n        for (i = 0; i < this.backgroundPoints.length; i++) {\n          this.tempMask2.ucharPtr(this.backgroundPoints[i].y * 0.5, this.backgroundPoints[i].x * 0.5)[0] = 0\n        }\n      }\n      else {\n        mode = cv.GC_INIT_WITH_RECT\n      }\n      cv.resize(maskView, tempMat1, new cv.Size(256, 256), 0, 0, cv.INTER_NEAREST)\n      cv.grabCut(tempMat1, this.tempMask2, resizeRect, bgdModel, fgdModel, 4, mode)\n      cv.resize(this.tempMask2, tempMat3, new cv.Size(512, 512), 0, 0, cv.INTER_NEAREST)\n      tempMat4 = this.createMask(tempMat3).clone()\n      cv.cvtColor(tempMat4, tempMat4, 1, 0)\n      cv.cvtColor(this.imageView, this.imageView, 1, 0)\n      cv.addWeighted(this.greenMask, this.alpha, tempMat4.clone(), this.beta, this.gamma, greenOverlay)\n      cv.addWeighted(greenOverlay.clone(), this.alpha, this.imageView, this.beta, this.gamma, this.addWeightedMat)\n      cv.imshow('canvasInput', this.grabCutMask)\n      cv.imshow('canvasOutput', this.addWeightedMat)\n      maskView.delete(); tempMat1.delete(); tempMat3.delete(); tempMat4.delete(); greenOverlay.delete(); bgdModel.delete(); fgdModel.delete()\n    },\n    createMask (maskTmp) {\n      var blank = new cv.Mat(512, 512, cv.CV_8UC1, new cv.Scalar(0, 0, 0, 255))\n      var oneMat = new cv.Mat(512, 512, cv.CV_8UC1, new cv.Scalar(1))\n      var threeMat = new cv.Mat(512, 512, cv.CV_8UC1, new cv.Scalar(3))\n      var subMat = new cv.Mat(512, 512, cv.CV_8UC1, new cv.Scalar(this.count))\n      var foreMask = new cv.Mat(512, 512, cv.CV_8UC1, new cv.Scalar(0))\n      cv.compare(maskTmp, oneMat, oneMat, cv.CMP_EQ)\n      cv.compare(maskTmp, threeMat, threeMat, cv.CMP_EQ)\n      cv.bitwise_or(oneMat, threeMat, foreMask)\n      cv.subtract(foreMask, subMat, foreMask)\n      cv.add(blank, foreMask, maskTmp)\n      oneMat.delete(); threeMat.delete(); subMat.delete(); foreMask.delete()\n      this.grabCutMask = maskTmp.clone()\n      return maskTmp\n    },\n    addMask (finalMask) {\n      cv.add(finalMask, this.grabCutMask, finalMask)\n      cv.imshow('canvasMask', finalMask)\n      return finalMask\n    }\n  },\n\n  mounted () {\n    cv['onRuntimeInitialized'] = () => {\n      this.mat = new cv.Mat()\n      this.imageView = new cv.Mat()\n      this.image = new cv.Mat()\n      this.tempMask2 = new cv.Mat()\n      this.grabCutMask = new cv.Mat(512, 512, cv.CV_8UC1, new cv.Scalar(0, 0, 0, 255))\n      this.finalMaskResult = new cv.Mat(512, 512, cv.CV_8UC1, new cv.Scalar(0, 0, 0, 255))\n      this.greenMask = new cv.Mat(512, 512, cv.CV_8UC3, new cv.Scalar(152, 231, 153, 100))\n      this.redMask = new cv.Mat(512, 512, cv.CV_8UC3, new cv.Scalar(231, 152, 165, 100))\n      this.addWeightedMat = new cv.Mat()\n      var tool = new paper.Tool()\n      tool.onMouseDown = this.mouseDown\n      tool.onMouseDrag = this.mouseDrag\n      tool.onMouseUp = this.mouseUp\n      paper.setup(this.$refs['canvasOutput'])\n      this.img.onload = () => {\n        this.showImg()\n      }\n      this.getFiles()\n\n      window.addEventListener('keydown', (e) => {\n        console.log('key:', e)\n        if (this.toolActive) {\n          switch (e.code) {\n            case 'ArrowUp':\n              if (this.rectDrawn) {\n                var greenOverlay = new cv.Mat()\n                cv.cvtColor(this.grabCutMask, this.grabCutMask, 1, 0)\n                cv.cvtColor(this.imageView, this.imageView, 1, 0)\n                cv.addWeighted(this.greenMask, this.alpha, this.grabCutMask, this.beta, this.gamma, greenOverlay)\n                cv.addWeighted(greenOverlay, this.alpha, this.imageView, this.beta, this.gamma, this.addWeightedMat)\n                cv.imshow('canvasInput', this.addWeightedMat)\n                greenOverlay.delete()\n              }\n              break\n            case 'ArrowDown':\n              if (this.rectDrawn) {\n                var redOverlay = new cv.Mat()\n                cv.cvtColor(this.grabCutMask, this.grabCutMask, 1, 0)\n                cv.cvtColor(this.imageView, this.imageView, 1, 0)\n                cv.addWeighted(this.redMask, this.alpha, this.grabCutMask, this.beta, this.gamma, redOverlay)\n                cv.addWeighted(redOverlay, this.alpha, this.imageView, this.beta, this.gamma, this.addWeightedMat)\n                cv.imshow('canvasInput', this.addWeightedMat)\n                redOverlay.delete()\n              }\n              break\n            case 'ArrowLeft':\n              this.prev()\n              this.resetImg()\n              break\n            case 'ArrowRight':\n              this.next()\n              this.resetImg()\n              break\n            case 'Space':\n              this.select()\n              break\n            case 'KeyF':\n              if (this.selected) {\n                this.drawLine = true\n                this.fgDraw()\n              }\n              break\n            case 'KeyB':\n              if (this.selected) {\n                this.drawLine = true\n                this.bgDraw()\n              }\n              break\n            case 'KeyC':\n              if (this.selected) {\n                this.continueDraw()\n              }\n              break\n            case 'KeyR':\n              if (this.selected) {\n                this.resetImg()\n              }\n              break\n            case 'KeyS':\n              if (this.selected) {\n                this.saveMask()\n              }\n              break\n            case 'KeyU':\n              if (this.selected) {\n                this.undo()\n              }\n              break\n          }\n        }\n      }, false)\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1, h2 {\n  font-weight: normal;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #539ecf;\n}\ncanvas {\n  background-color: #343a40;\n  border: 10px !important;\n  border-color: #343a40;\n  margin: 2px;\n}\n.file-viewer {\n  box-shadow: none !important;\n  border: none !important;\n  font-size: small !important;\n}\n.navbar-brand {\n  width: 16.6666%;\n  height: 60px;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 100%;\n  padding: 25px 0;\n  float: left;\n  transition: all 0.3s ease;\n  background-image: url(../assets/name.svg);\n  color: rgba(255, 255, 255, 0.8);\n}\n.nav-bar-button {\n  background-color: transparent !important;\n  border-color: transparent !important;\n}\n.nav-bar-button:hover {\n  background-color: #5a6268 !important;\n  border-color: #5a6268 !important;\n}\n.b-sidebar-body{\n  background-color: black !important;\n}\n.b-sidebar-btn-secondary {\n  width: 100%;\n}\n</style>\n"]}]}